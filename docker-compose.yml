version: '3.8'
services:
  automation-service:
    build: ./automation-service
    container_name: automation-service
    networks:
      - internal-network
    volumes:
      - ./logs:/app/logs
    environment:
      - AUTOMATION_API_KEY=${AUTOMATION_API_KEY}
    depends_on:
      gpt-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3

  gpt-service:
    build: ./gpt-service
    container_name: gpt-service
    networks:
      - internal-network
    volumes:
      - ./logs:/app/logs
    environment:
      - GPT_API_KEY=${GPT_API_KEY}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/summarize-loads"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  internal-network:
    driver: bridge

    version: '3.8'
services:
  postgres:
    image: postgres:15
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: loads_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - internal-network

volumes:
  pgdata:

networks:
  internal-network:
    driver: bridge